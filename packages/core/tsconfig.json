{
    "compilerOptions": {
        "target": "es2022",
        "experimentalDecorators": true,
        "emitDecoratorMetadata": true,
        "module": "commonjs",
        "outDir": "./dist",
        "resolveJsonModule": true,
        "types": ["reflect-metadata", "jest"],
        "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
        "declarationMap": true /* Create sourcemaps for d.ts files. */,
        "sourceMap": true /* Create source map files for emitted JavaScript files. */,
        "removeComments": true /* Disable emitting comments. */,
        "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
        "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
        "strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */,
        "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
        "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
        "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
        "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
        "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
        "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
        "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
        "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
        "noPropertyAccessFromIndexSignature": true /* Enforces using indexed accessors for keys declared using an indexed type. */,
        "skipLibCheck": true /* Skip type checking all .d.ts files. */
    },
    "include": [
        "**/*.ts",
        "../auth/auth_lifecycle.ts",
        "src/reflect/get-all-metadata.ts"
    ],
    "exclude": [
        "node_modules",
        "**/dist",
        "**/*.spec.ts",
        "**/webpack.config.ts"
    ]
}
