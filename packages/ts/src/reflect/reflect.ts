import 'reflect-metadata';

export const apply = Reflect.apply;
export const construct = Reflect.construct;
export const decorate = Reflect.decorate;
export const defineMetadata = Reflect.defineMetadata;
export const defineProperty = Reflect.defineProperty;
export const get = Reflect.get;
export const getMetadata = Reflect.getMetadata;
export const getMetadataKeys = Reflect.getMetadataKeys;
export const getOwnMetadata = Reflect.getOwnMetadata;
export const getOwnMetadataKeys = Reflect.getOwnMetadataKeys;
export const getOwnPropertyDescriptor = Reflect.getOwnPropertyDescriptor;
export const getPrototypeOf = Reflect.getPrototypeOf;
export const has = Reflect.has;
export const hasMetadata = Reflect.hasMetadata;
export const hasOwnMetadata = Reflect.hasOwnMetadata;
export const isExtensible = Reflect.isExtensible;
export const metadata = Reflect.metadata;
export const ownKeys = Reflect.ownKeys;
export const preventExtensions = Reflect.preventExtensions;
export const set = Reflect.set;
export const setPrototypeOf = Reflect.setPrototypeOf;
